<?php
    // Set default value if necessary:
    if (!isset($this->searchClassId)) {
        $this->searchClassId = 'Solr';
    }

    // Load search actions and settings (if any):
    $options = $this->searchOptions($this->searchClassId);
    $handlers = $this->searchbox()->getHandlers(
        $this->searchClassId,
        $this->searchIndex ?? null
    );
    $handlerCount = count($handlers);
    $basicSearch = $this->searchbox()->combinedHandlersActive() ? 'combined-searchbox' : $options->getSearchAction();
    $searchHome = $options->getSearchHomeAction();
    $advSearch = $options->getAdvancedSearchAction();
    $lastSort = $this->searchMemory()->getLastSort($this->searchClassId);
    $lastLimit = $this->searchMemory()->getLastLimit($this->searchClassId);
    $ignoreHiddenFilterMemory = $this->ignoreHiddenFilterMemory ?? false;
    $ignoreHiddenFiltersInRequest = $this->ignoreHiddenFiltersInRequest ?? false;
    $hiddenFilters = $this->searchTabs()->getHiddenFilters($this->searchClassId, $ignoreHiddenFilterMemory, $ignoreHiddenFiltersInRequest);
    if (empty($hiddenFilters) && !$ignoreHiddenFilterMemory) {
        $hiddenFilters = $this->searchMemory()->getLastHiddenFilters($this->searchClassId);
        if (empty($hiddenFilters)) {
            $hiddenFilters = $this->searchTabs()->getHiddenFilters($this->searchClassId);
        }
    }
    $hiddenFilterParams = $this->searchTabs()->getCurrentHiddenFilterParams($this->searchClassId, $ignoreHiddenFilterMemory, '?');

    if (!isset($this->filterList) || !isset($this->checkboxFilters)) {
        $params = $this->searchMemory()->getLastSearchParams($this->searchClassId);
        $filterList = $params->getFilterList(true);
        $checkboxFilters = $params->getCheckboxFacets();
    } else {
        $filterList = is_array($this->filterList) ? $this->filterList : [];
        $checkboxFilters = is_array($this->checkboxFilters) ? $this->checkboxFilters : [];
    }
    $filterDetails = $this->searchbox()->getFilterDetails($filterList, $checkboxFilters);
    $disabled = '';
    if ($this->client()->isIsilSession() && !$this->client()->hasIsilSession()) {
        $disabled = 'disabled';
    }
?>
<?php $tabConfig = $this->searchTabs()->getTabConfig($this->searchClassId, $this->lookfor, $this->searchIndex, 'basic', $hiddenFilters); ?>
<?php if ($this->searchType == 'do not go into here, it outputs stuff we do not want in boss!'): ?>
  <div class="navbar-form navbar-left flip">
    <?php $tabs = $this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $tabConfig['tabs']]); ?>
    <?php if (!empty($tabs)): ?><?=$tabs ?><div class="tab-content clearfix"><?php endif; ?>
     <?php if (!empty($tabs)): ?></div><?php endif; ?>
  </div>
<?php else: ?>
    <form id="searchForm" class="searchForm"
          method="GET" action="<?= $this->url($basicSearch) ?>" name="searchForm"
          autocomplete="off">
        <?= $this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $tabConfig['tabs']]); ?>
        <?php $placeholder = $this->searchbox()->getPlaceholderText($tabConfig['selected']['id'] ?? null); ?>
        <div class="input-group">
            <div class="input-group-btn">
                <button class="btn btn-fake">
                <i class="fa fa-search"></i>
                </button>
            </div>
            <input <?= $disabled ?> id="searchForm_lookfor"
                                    class="searchForm_lookfor form-control search-query<?php if ($this->searchbox()->autocompleteEnabled($this->searchClassId)): ?> autocomplete searcher:<?= $this->escapeHtmlAttr($this->searchClassId) ?><?= $this->searchbox()->autocompleteAutoSubmit($this->searchClassId) ? ' ac-auto-submit' : '' ?><?php endif ?>"
                                    type="text" name="lookfor"
                                    value="<?= $this->escapeHtmlAttr($this->searchMemory()->getLastSearchterms()); ?>"<?php if ($placeholder): ?> placeholder="<?= $this->transEsc($placeholder) ?>"<?php endif ?>
                                    data-title="<?= $this->transEsc('empty_search') ?>"
                                    data-content="<?= $this->transEsc('empty_search_text') ?>"
                                    autocomplete="on"/>
            <div class="input-group-btn">
                <button type="button" data-target="#searchForm_lookfor"
                        class="btn delete-input <?= $disabled ?>"><i
                            class="fa fa-times-circle"
                            aria-hidden="true"></i><span
                            class="sr-only"><?= $this->transEsc('Delete') ?></span>
                </button>
            </div>

            <?php if (!isset($frame) && $advSearch && $this->client()->is('advanced_search_button')): ?>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group-btn">
                            <?php if ($advSearch): ?>
                                <a href="<?= $this->url($advSearch) . ((isset($this->searchId) && $this->searchId) ? '?edit=' . $this->escapeHtmlAttr($this->searchId) : $hiddenFilterParams) ?>"
                                   class="btn btn-primary <?= $disabled ?>" rel="nofollow"><i
                                            class='fa fa-search-plus'></i>
                                    <span class="text hidden-xs"><?= $this->transEsc("Advanced") ?></span></a>
                            <?php endif; ?>
                        </div>
                    </div>
                </div>

            <?php endif; ?>
        </div>
    <input type="hidden" name="type" value="<?php if (array_key_exists(0, $handlers) && array_key_exists('value', $handlers[0])): ?><?=$this->escapeHtmlAttr($handlers[0]['value'])?><?php endif; ?>" />

    <?php $shards = $options->getShards(); if ($options->showShardCheckboxes() && !empty($shards)): ?>
      <?php
      $selectedShards = isset($this->selectedShards)
          ? $this->selectedShards : $options->getDefaultSelectedShards();
      ?>
      <br />
      <?php foreach ($shards as $shard => $val): ?>
        <?php $isSelected = empty($selectedShards) || in_array($shard, $selectedShards); ?>
          <input type="checkbox" <?=$isSelected ? 'checked="checked" ' : ''?>name="shard[]" value='<?=$this->escapeHtmlAttr($shard)?>' /> <?=$this->transEsc($shard)?>
      <?php endforeach; ?>
    <?php endif; ?>
    <?php
      $filterDetails = $this->searchbox()->getFilterDetails(
          isset($this->filterList) && is_array($this->filterList) ? $this->filterList : [],
          isset($this->checkboxFilters) && is_array($this->checkboxFilters) ? $this->checkboxFilters : []
      );
    ?>
    <?php if ((isset($hasDefaultsApplied) && $hasDefaultsApplied) || !empty($filterDetails)): ?>
      <?php $defaultFilterState = $options->getRetainFilterSetting() ? ' checked="checked"' : ''; ?>
      <div class="checkbox">
        <label>
          <input type="hidden"<?=$defaultFilterState?> class="searchFormKeepFilters"/>
          <?//=$this->transEsc("basic_search_keep_filters")?>
        </label>
      </div>
      <div class="hidden">
        <?php foreach ($filterDetails as $current): ?>
          <input class="applied-filter" id="<?=$this->escapeHtmlAttr($current['id'])?>" type="checkbox"<?=$defaultFilterState?> name="filter[]" value="<?=$this->escapeHtmlAttr($current['value'])?>" />
          <label for="<?=$this->escapeHtmlAttr($current['id'])?>"><?=$this->escapeHtml($current['value'])?></label>
        <?php endforeach; ?>
        <?php if (isset($hasDefaultsApplied) && $hasDefaultsApplied): ?>
          <!-- this is a hidden element that flags whether or not default filters have been applied;
               it is intentionally unlabeled, as users are not meant to manipulate it directly. -->
          <input class="applied-filter" id="dfApplied" type="checkbox" name="dfApplied" value="1"<?=$defaultFilterState?> />
        <?php endif; ?>
      </div>
    <?php endif; ?>
    <?php foreach ($hiddenFilters as $key => $filter): ?>
      <?php foreach ($filter as $value): ?>
        <input type="hidden" name="hiddenFilters[]" value="<?=$this->escapeHtmlAttr($key) . ':' . $this->escapeHtmlAttr($value)?>" />
      <?php endforeach; ?>
    <?php endforeach; ?>
    <?php
      /* Show hidden field for active search class when in combined handler mode. */
      if ($this->searchbox()->combinedHandlersActive()) {
          echo '<input type="hidden" name="activeSearchClassId" value="' . $this->escapeHtmlAttr($this->searchClassId) . '" />';
      }
      /* Load hidden limit preference from Session */
      if (!empty($lastLimit)) {
          echo '<input type="hidden" name="limit" value="' . $this->escapeHtmlAttr($lastLimit) . '" />';
      }
      if (!empty($lastSort)) {
          echo '<input type="hidden" name="sort" value="' . $this->escapeHtmlAttr($lastSort) . '" />';
      }
    ?>
  </form>
<?php endif; ?>
