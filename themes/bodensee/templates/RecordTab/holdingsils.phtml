<?
    // Set up convenience variables:
    $account = $this->auth()->getManager();
    $user = $account->isLoggedIn();
    $openUrl = $this->openUrl($this->driver, 'holdings');
    $openUrlActive = $openUrl->isActive();
    // Account for replace_other_urls setting
    $urls = $this->record($this->driver)->getLinkDetails($openUrlActive);
    $offlineMode = $this->ils()->getOfflineMode();
    try {
        $holdings = $this->driver->getRealTimeHoldings();
    } catch (\VuFind\Exception\ILS $e) {
        $holdings = ['holdings' => []];
        $offlineMode = 'ils-offline';
    }
    // Set page title.
    $this->headTitle($this->translate('Holdings') . ': ' . $this->driver->getBreadcrumb());
?>

<?=$this->context($this)->renderInContext('librarycards/selectcard.phtml', ['user' => $this->auth()->isLoggedIn()]); ?>

<? if (!empty($holdings['blocks'])):?>
  <div id="account-block-msg" class="alert alert-danger">
    <?=$this->transEsc('account_block_options_missing', ['%%details%%' => implode('; ', $holdings['blocks'])]) ?>
  </div>
<? endif; ?>

<?=($offlineMode == "ils-offline") ? $this->render('Helpers/ils-offline.phtml', ['offlineModeMsg' => 'ils_offline_holdings_message']) : ''?>
<? if (($this->ils()->getHoldsMode() == 'driver' && !empty($holdings['holdings'])) || $this->ils()->getTitleHoldsMode() == 'driver'): ?>
  <? if ($account->loginEnabled() && $offlineMode != 'ils-offline'): ?>
    <? if (!$user): ?>
      <div class="alert alert-info">
        <a href="<?=$this->recordLink()->getTabUrl($this->driver, 'Holdings')?>?login=true&amp;catalogLogin=true" data-lightbox><?=$this->transEsc("hold_login")?></a>
      </div>
    <? elseif (!$user->cat_username): ?>
      <div class="alert alert-info">
        <?=$this->translate("hold_profile_html", ['%%url%%' => $this->recordLink()->getTabUrl($this->driver, 'Holdings') . '?catalogLogin=true'])?>
      </div>
    <? endif; ?>
  <? endif; ?>
<? endif; ?>
<? $holdingTitleHold = $this->driver->tryMethod('getRealTimeTitleHold'); if (!empty($holdingTitleHold)): ?>
  <a class="placehold" data-lightbox title="<?=$this->transEsc('request_place_text')?>" href="<?=$this->recordLink()->getRequestUrl($holdingTitleHold)?>"><i class="fa fa-flag" aria-hidden="true"></i>&nbsp;<?=$this->transEsc('title_hold_place')?></a>
<? endif; ?>
 <?// removed online access as this is listed in main section ?>
 <? $recallButtonCounter = 0 ?>
<? foreach ($holdings['holdings'] as $holding): ?>
<h3>
  <? $locationText = $this->transEsc('location_' . $holding['location'], [], $holding['location']); ?>
  <? if (isset($holding['locationhref']) && $holding['locationhref']): ?>
    <a href="<?=$holding['locationhref']?>" target="_blank"><?=$locationText?></a>
  <? else: ?>
    <?=$locationText?>
  <? endif; ?>
</h3>
<table class="table table-striped" summary="<?=$this->transEsc('holdings_details_from', ['%%location%%' => $this->transEsc($holding['location'])]) ?>">
  <? foreach ($holding['items'] as $row): ?>

    <? /* One Recall/Holds-Button for all items */ ?>
    <? if ($row['status'] != 'For reference' && 
           $row['status'] != 'Lost' && 
           $row['status'] != 'Missing' && 
           $row['status'] != 'Permanent on loan'): 
           $recallButtonCounter++; 
       endif; 
    ?>
    <? if ($this->ils()->getDriverClass() == 'Bsz\ILS\Driver\DAIA'): //start of new/adis DAIA code ?>
        <?=$this->render('RecordTab/parts/adisdaia.phtml', ['row' => $row, 'driver' => $this->driver, 'recallButtonCounter' => $recallButtonCounter])?>
    <? else: // start of old DAIA code ?>    
        <?=$this->render('RecordTab/parts/olddaia.phtml', ['row' => $row, 'driver' => $this->driver])?>        
    <? endif; // End of old DAIA code ?>
    
  <? endforeach; ?>
  <? if (!empty($holding['purchase_history'])): ?>
    <tr>
      <th><?=$this->transEsc("Most Recent Received Issues")?>:</th>
      <td>
        <? foreach ($holding['purchase_history'] as $current): ?>
          <?=$this->escapeHtml($current['issue'])?><br/>
        <? endforeach; ?>
      </td>
    </tr>
  <? endif; ?>
</table>
<? endforeach; ?>

<? $history = $this->driver->getRealTimeHistory(); ?>
<? if (is_array($history) && !empty($history)): ?>
<h3><?=$this->transEsc("Most Recent Received Issues")?></h3>
<table class="table table-striped">
  <? foreach ($history as $row): ?>
    <tr><td><?=$this->escapeHtml($row['issue'])?></td></tr>
  <? endforeach; ?>
</table>
<? endif; ?>
